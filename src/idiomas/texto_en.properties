titulo_inicio=I/O Systems
creadores=Created by:
carrera=Systems Engineering - 2023
profesor=Engineer Eduardo Rueda
nombre1=Camilo Mora &


#Pantalla Contenido

titulo_contenido = Content
content1 = Context - Overview
content2 = I/O Hardware 
content3 = Application I/O Interface 
content4 = Kernel I/O Subsystem 
content5 = Transforming I/O Requests to Hardware Operations 
content6 = Performance

#Pantalla Contexto

titulo_contexto = Context
jLabel1_contexto = \u25cf I/O management is a major component of operating system design and operation 
jLabel2_contexto = > Important aspect of computer operation 
jLabel3_contexto = > I/O devices vary greatly
jLabel4_contexto = > Various methods to control them 
jLabel5_contexto = > Performance management  
jLabel6_contexto = > New types of devices frequent 
jLabel7_contexto = \u25cf Ports, busses, device controllers connect to various devices 
jLabel8_contexto = \u25cf Device drivers encapsulate device details  
jLabel9_contexto = > Present uniform device-access interface to I/O subsystem 

#Pantalla Tema1

titulo_tema1 = I/O Hardware
jLabel1_tema1 = \u25cf I/O Hardware refers to the diverse range of input/output devices used in a computer system, 
jLabel2_tema1 = encompassing storage, transmission, and human-interface devices. 
jLabel3_tema1 = These devices communicate with the computer through common concepts such as ports and buses.
jLabel4_tema1 = > Port: A connection point for devices.
jLabel5_tema1 = > Bus: A shared access pathway where devices are linked. Common buses include PCI  
jLabel6_tema1 = (Peripheral Component Interconnect) and PCIe (PCI Express), used in PCs and servers.
jLabel7_tema1 = \u25cf I/O Hardware also includes the controller (or host adapter), which comprises electronics 
jLabel8_tema1 = managing the port, bus, and devices. Controllers can be integrated or exist as separate
jLabel9_tema1 = circuit boards, containing processors, microcode, private memory, and bus controllers.
jLabel10_tema1 = I/O Hardware encompasses a wide array of devices for input/output, including
jLabel11_tema1 = storage, transmission, and human-interface devices. Ports and buses serve as 
jLabel12_tema1 = connection points and pathways, with controllers managing these interactions.

#Pantalla Tema2

titulo_tema2 = Application I/O Interface 
jLabel1_tema2 = \u25cf I/O system calls standardize device behaviors into general classes.
jLabel2_tema2 = \u25cf Device-driver layer conceals variations among I/O controllers from the kernel.
jLabel3_tema2 = \u25cf New devices using established protocols require no additional setup.
jLabel4_tema2 = \u25cf Each operating system has its specific I/O structures and driver frameworks.
jLabel5_tema2 = \u25cf Devices differ across multiple aspects:
jLabel6_tema2 = > Type: Character-stream or block devices.
jLabel7_tema2 = > Access: Sequential or random access.
jLabel8_tema2 = > Operation: Synchronous, asynchronous, or both.
jLabel9_tema2 = > Usage: Shareable or dedicated.
jLabel10_tema2 = > Speed: Varies in operation speed.
jLabel11_tema2 = > Capabilities: Read-write, read-only, or write-only.

#Pantalla Tema3

titulo_tema3 = Kernel I/O Subsystem
jLabel1_tema3 =  \u25cf The Kernel I/O Subsystem handles key aspects:
jLabel2_tema3 =  > Scheduling: Organizing I/O requests, some through per-device queues,
jLabel3_tema3 =  aiming for fairness or implementing Quality of Service.
jLabel4_tema3 =  > Buffering: Temporarily storing data in memory during transfers to manage device
jLabel5_tema3 =  speed and size differences, ensuring consistent data copies.
jLabel6_tema3 =  > Caching: Utilizing faster device copies of data for improved performance,
jLabel7_tema3 =  often combined with buffering.
jLabel8_tema3 =  > Spooling: Temporarily storing device output, useful for single-serving devices like printers.
jLabel9_tema3 =  > Device Reservation: Provides exclusive device access, managed through system calls,
jLabel10_tema3 = requiring attention to prevent deadlocks.

#Pantalla Tema4

titulo_tema4 = Transforming I/O Requests to Hardware Operations
jLabel1_tema4 = \u25cf Transforming I/O Requests to Hardware Operations involves several steps
jLabel2_tema4 = when, for example, reading a file from disk for a process:
jLabel3_tema4 = > Determining the Device: Identify the device that holds the required file.
jLabel4_tema4 = > Translating Name to Device Representation: Translate the file's name into a
jLabel5_tema4 = format that the device understands, allowing access.
jLabel6_tema4 = > Reading Data from Disk: Physically retrieve data from the disk and load
jLabel7_tema4 = it into a buffer in memory.
jLabel8_tema4 = > Making Data Available: Once the data is in the buffer, it becomes
jLabel9_tema4 = accessible to the requesting process.
jLabel10_tema4 = > Returning Control to Process: Finally, control is handed back to the
jLabel11_tema4 = process, which can then utilize the data retrieved from the disk.